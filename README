#=================================================================================================#
#                                                                                                 #
#                      Explorations with Optimized Numerical Simulations                          #
#                      E.O.N.S.                                                                   #
#                      MVP: Spherical Gravitational Collapse Simulation                           #
#                                                                                                 #
#=================================================================================================#

Overview

This MVP demonstrates a spherically symmetric gravitational collapse simulation built using the 
E.O.N.S. numerical framework. It combines a Lane-Emden density profile, finite-difference methods, 
and iterative time integration to model self-gravitating hydrodynamics in 1D.

Key Features
Lane-Emden Initialization: Generates initial density profiles for polytropic spheres.

Spline Interpolation: Downsamples high-res initial profiles to a working grid.

Self-Gravity Solver: Solves Poisson's equation using a spherical tridiagonal matrix.

Hydrodynamics: Updates density and velocity via finite-difference flux-conserving schemes.

Adaptive Timestep: Ensures stability via CFL-like condition.

Output: Saves snapshots to an HDF5 file for post-processing.

Requirements
Julia 1.x

Packages:

HDF5

Plots

How to Run
Clone this repo.

Run the main script:

julia main.jl

#=================================================================================================#

The script will:

Generate an initial polytropic density profile.

Evolve the collapse for a specified number of steps.

Save snapshots every save_every steps to collapse_run.h5.

#=================================================================================================#

Files
main.jl — Main script that sets up and runs the simulation.

Lane_Emden.jl — Solves the Lane-Emden equation for initial conditions.

interp_test.jl — Provides cubic spline interpolation.

collapse_run.h5 — HDF5 file containing simulation snapshots.

#=================================================================================================#

Output
Simulation snapshots are saved in /snapshots/ groups within the HDF5 file. Each snapshot contains:

radius

density

velocity

gravity

grav_accel

time

dt

#=================================================================================================#

You can visualize these snapshots using Plots.jl or external tools like h5py (Python) or HDFView.

Example Plot

using HDF5, Plots

h5file = h5open("collapse_run.h5", "r")
snap = h5file["/snapshots/step_100"]
r = snap["radius"][:]
ρ = snap["density"][:]
v = snap["velocity"][:]

plot(r, ρ, label="Density")
plot!(r, v, label="Velocity", yaxis=:right)

#=================================================================================================#

Next Steps

Integrate with the A.R.C. numerical suite.

Add shock-capturing methods (e.g., Godunov/WENO).

Expand to multi-physics (energy transport, EOS).

Optimize performance via in-place updates and parallelization.

#=================================================================================================#

E.O.N.S. is a platform for discovery, learning, and innovation in numerical simulations.